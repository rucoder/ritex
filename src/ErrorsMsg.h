#include <string>

typedef struct {
	int m_code;
	const char* m_text;
} fault_code_t;

static fault_code_t fault_codes[] = {
	{0,"Авария устранена"},
	{1,"Ошибка связи ПИУ-ЦУУ"},
	{2,"Ошибка связи ЦУУ-ПЧ"},
	{3,"Ошибка связи ЦУУ-ПЧ"},
	{4,"Ошибка связи ЦУУ-ТМС"},
	{20,"Ошибка ввода уставки"},
	{21,"Не введен пароль"},
	{22,"Ввод уставки запрещен"},
	{30,"Защита по I GND (Аварийный останов для СУПН-М)"},
	{31,"Защита по U макс."},
	{32,"Защита драйвера ШИМ пли КОМ"},
	{33,"Защита по I макс."},
	{10,"Неисправность БЦУУ"},
	{40,"Неисправность ПЧ"},
	{41,"Неисправность вентиляторов ПЧ"},
	{42,"Неисправность датчика Rиз"},
	{43,"Неисправность ТМС"},
	{44,"Неисправность ПИнС"},
	{50,"Обрыв фазы"},
	{51,"Напряжение сети ниже допуска"},
	{52,"Напряжение сети выше допуска"},
	{53,"Дисбаланс входных напряжений"},
	{54,"Дисбаланс выходных напряжений"},
	{55,"Дисбаланс выходных токов"},
	{56,"Перегруз по току"},
	{57,"Недогруз по току"},
	{58,"Турбинное вращение"},
	{59,"rиз ниже допуска"},
	{60,"Давление на устье выше допуска"},
	{61,"Давление на устье ниже допуска"},
	{62,"Давление на приеме насоса ниже допуска"},
	{63,"Температура двигателя выше допуска"},
	{64,"Вибрация выше допуска"},
	{65,"Программный сбой"},
	{-6,"СУ занята"},
	{-4,"СУ занята"}
};

#define NUMBER_OF_FAULT_CODES (sizeof(fault_codes) / sizeof(fault_code_t))

std::string getFaultText(int code) {
	for (unsigned int i = 0; i< NUMBER_OF_FAULT_CODES; i++) {
		if(fault_codes[i].m_code == code)
			return std::string(fault_codes[i].m_text);
	}
	return std::string("");
}


